version: "3.9"

# Volúmenes compartidos para persistencia de datos
volumes:
  openvas:
  defectdojo_postgres:
  defectdojo_media:
  defectdojo_redis:

services:

  #################################################################
  #                      ─── OpenVAS ───                           #
  #################################################################
  openvas:
    image: immauss/openvas:24.12.02
    container_name: openvas
    ports:
      - "8080:9392"       # Puerto para interfaz web OpenVAS
    environment:
      PASSWORD: "${OPENVAS_PASSWORD}"
      USERNAME: "${OPENVAS_USUARIO}"
      RELAYHOST: "${OPENVAS_RELAYHOST}"
      SMTPPORT: "${OPENVAS_SMTPPUERTO}"
      REDISDBS: "${OPENVAS_REDISDBS}"
      QUIET: "${OPENVAS_QUIETO}"
      NEWDB: "${OPENVAS_NUEVADB}"
      SKIPSYNC: "${OPENVAS_OMITIR_SYNC}"
      RESTORE: "${OPENVAS_RESTAURAR}"
      DEBUG: "${OPENVAS_DEBUG}"
      HTTPS: "${OPENVAS_HTTPS}"
      GMP: "${OPENVAS_GMP}"
    volumes:
      - openvas:/data

  #################################################################
  #                      ─── DefectDojo ───                        #
  #################################################################

  nginx:
    build:
      context: ./
      dockerfile: "Dockerfile.nginx-${DEFECT_DOJO_OS:-debian}"
    image: "defectdojo/defectdojo-nginx:${NGINX_VERSION:-latest}"
    depends_on:
      - uwsgi
    environment:
      NGINX_METRICS_ENABLED: "${NGINX_METRICS_ENABLED}"
      DD_UWSGI_HOST: "${DD_UWSGI_HOST}"
      DD_UWSGI_PORT: "${DD_UWSGI_PORT}"
    volumes:
      - defectdojo_media:/usr/share/nginx/html/media
    ports:
      - target: 8080
        published: ${PUERTO_DEFECTDOJO_HTTP}
        protocol: tcp
        mode: host
      - target: 8443
        published: ${PUERTO_DEFECTDOJO_HTTPS}
        protocol: tcp
        mode: host

  uwsgi:
    build:
      context: ./
      dockerfile: "Dockerfile.django-${DEFECT_DOJO_OS:-debian}"
      target: django
    image: "defectdojo/defectdojo-django:${DJANGO_VERSION:-latest}"
    depends_on:
      - postgres
    entrypoint: ["/wait-for-it.sh", "${DD_DATABASE_HOST}:${DD_DATABASE_PORT}", "-t", "30", "--", "/entrypoint-uwsgi.sh"]
    environment:
      DD_DEBUG: "${DD_DEBUG}"
      DD_DJANGO_METRICS_ENABLED: "${DD_DJANGO_METRICS_ENABLED}"
      DD_ALLOWED_HOSTS: "${DD_ALLOWED_HOSTS}"
      DD_DATABASE_URL: "${DD_DATABASE_URL}"
      DD_CELERY_BROKER_URL: "${DD_CELERY_BROKER_URL}"
      DD_SECRET_KEY: "${DD_SECRET_KEY}"
      DD_CREDENTIAL_AES_256_KEY: "${DD_CREDENTIAL_AES_256_KEY}"
      DD_DATABASE_READINESS_TIMEOUT: "${DD_DATABASE_READINESS_TIMEOUT}"
    volumes:
      - type: bind
        source: ./docker/extra_settings
        target: /app/docker/extra_settings
      - defectdojo_media:${DD_MEDIA_ROOT}

  celerybeat:
    image: "defectdojo/defectdojo-django:${DJANGO_VERSION:-latest}"
    depends_on:
      - postgres
      - redis
    entrypoint: ["/wait-for-it.sh", "${DD_DATABASE_HOST}:${DD_DATABASE_PORT}", "-t", "30", "--", "/entrypoint-celery-beat.sh"]
    environment:
      DD_DATABASE_URL: "${DD_DATABASE_URL}"
      DD_CELERY_BROKER_URL: "${DD_CELERY_BROKER_URL}"
      DD_SECRET_KEY: "${DD_SECRET_KEY}"
      DD_CREDENTIAL_AES_256_KEY: "${DD_CREDENTIAL_AES_256_KEY}"
      DD_DATABASE_READINESS_TIMEOUT: "${DD_DATABASE_READINESS_TIMEOUT}"
    volumes:
      - type: bind
        source: ./docker/extra_settings
        target: /app/docker/extra_settings

  celeryworker:
    image: "defectdojo/defectdojo-django:${DJANGO_VERSION:-latest}"
    depends_on:
      - postgres
      - redis
    entrypoint: ["/wait-for-it.sh", "${DD_DATABASE_HOST}:${DD_DATABASE_PORT}", "-t", "30", "--", "/entrypoint-celery-worker.sh"]
    environment:
      DD_DATABASE_URL: "${DD_DATABASE_URL}"
      DD_CELERY_BROKER_URL: "${DD_CELERY_BROKER_URL}"
      DD_SECRET_KEY: "${DD_SECRET_KEY}"
      DD_CREDENTIAL_AES_256_KEY: "${DD_CREDENTIAL_AES_256_KEY}"
      DD_DATABASE_READINESS_TIMEOUT: "${DD_DATABASE_READINESS_TIMEOUT}"
    volumes:
      - type: bind
        source: ./docker/extra_settings
        target: /app/docker/extra_settings
      - defectdojo_media:${DD_MEDIA_ROOT}

  initializer:
    image: "defectdojo/defectdojo-django:${DJANGO_VERSION:-latest}"
    depends_on:
      - postgres
    entrypoint: ["/wait-for-it.sh", "${DD_DATABASE_HOST}:${DD_DATABASE_PORT}", "--", "/entrypoint-initializer.sh"]
    environment:
      DD_DATABASE_URL: "${DD_DATABASE_URL}"
      DD_ADMIN_USER: "${DD_ADMIN_USER}"
      DD_ADMIN_MAIL: "${DD_ADMIN_MAIL}"
      DD_ADMIN_FIRST_NAME: "${DD_ADMIN_FIRST_NAME}"
      DD_ADMIN_LAST_NAME: "${DD_ADMIN_LAST_NAME}"
      DD_INITIALIZE: "${DD_INITIALIZE}"
      DD_SECRET_KEY: "${DD_SECRET_KEY}"
      DD_CREDENTIAL_AES_256_KEY: "${DD_CREDENTIAL_AES_256_KEY}"
      DD_DATABASE_READINESS_TIMEOUT: "${DD_DATABASE_READINESS_TIMEOUT}"
    volumes:
      - type: bind
        source: ./docker/extra_settings
        target: /app/docker/extra_settings

  postgres:
    image: postgres:17.4-alpine@sha256:7062a2109c4b51f3c792c7ea01e83ed12ef9a980886e3b3d380a7d2e5f6ce3f5
    environment:
      POSTGRES_DB: "${DD_DATABASE_NAME}"
      POSTGRES_USER: "${DD_DATABASE_USER}"
      POSTGRES_PASSWORD: "${DD_DATABASE_PASSWORD}"
    volumes:
      - defectdojo_postgres:/var/lib/postgresql/data

  redis:
    image: redis:7.2.8-alpine@sha256:c88ea2979a49ca497bbf7d39241b237f86c98e58cb2f6b1bc2dd167621f819bb
    volumes:
      - defectdojo_redis:/data
